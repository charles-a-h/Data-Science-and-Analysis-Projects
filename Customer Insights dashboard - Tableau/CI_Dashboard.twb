<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ConsumerComplaints+ (Dataset_final)' inline='true' name='federated.1dodwlp1w9tl5419xvs960f8wjx3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Dataset_final' name='excel-direct.0asdyz51yrrc1n0zkajhl0elsf1p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/03-2020 SPG/03-Intro to Bus Analytics (C531)-Tues 530/05-HW/HW #2 Dashboard/Dataset_final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ConsumerComplaints].[ZIP code]' />
              <expression op='[ZipData].[zip]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0asdyz51yrrc1n0zkajhl0elsf1p' name='ConsumerComplaints' table='[ConsumerComplaints$]' type='table'>
            <columns gridOrigin='A1:Q10001:no:A1:Q2147483647:0' header='yes' outcome='2'>
              <column datatype='string' name='Complaint ID' ordinal='0' />
              <column datatype='string' name='Product' ordinal='1' />
              <column datatype='string' name='Sub-product' ordinal='2' />
              <column datatype='string' name='Issue' ordinal='3' />
              <column datatype='string' name='Sub-issue' ordinal='4' />
              <column datatype='string' name='City' ordinal='5' />
              <column datatype='string' name='State' ordinal='6' />
              <column datatype='string' name='State_Name' ordinal='7' />
              <column datatype='string' name='ZIP code' ordinal='8' />
              <column datatype='string' name='Submitted via' ordinal='9' />
              <column datatype='date' name='Date received' ordinal='10' />
              <column datatype='date' name='Date sent to company' ordinal='11' />
              <column datatype='string' name='Company' ordinal='12' />
              <column datatype='string' name='Company response' ordinal='13' />
              <column datatype='string' name='Timely response?' ordinal='14' />
              <column datatype='string' name='Consumer disputed?' ordinal='15' />
              <column datatype='integer' name='Response Efficiency' ordinal='16' />
            </columns>
          </relation>
          <relation connection='excel-direct.0asdyz51yrrc1n0zkajhl0elsf1p' name='ZipData' table='[ZipData$]' type='table'>
            <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='2'>
              <column datatype='string' name='zip' ordinal='0' />
              <column datatype='integer' name='population' ordinal='1' />
              <column datatype='real' name='age_median' ordinal='2' />
              <column datatype='integer' name='households' ordinal='3' />
              <column datatype='real' name='home_pct_own' ordinal='4' />
              <column datatype='real' name='home_pct_rent' ordinal='5' />
              <column datatype='real' name='income_median' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Complaint ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Complaint ID]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Complaint ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-product]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Sub-product</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Issue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Issue]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Issue</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-issue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-issue]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Sub-issue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State_Name]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>State_Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ZIP code]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>ZIP code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Submitted via</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Submitted via]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Submitted via</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date received</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date received]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Date received</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date sent to company</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date sent to company]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Date sent to company</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company response</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Company response]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Company response</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timely response?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Timely response?]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Timely response?</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumer disputed?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Consumer disputed?]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Consumer disputed?</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Response Efficiency</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Response Efficiency]</local-name>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias>Response Efficiency</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ConsumerComplaints]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zip]</local-name>
            <parent-name>[ZipData]</parent-name>
            <remote-alias>zip</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[ZipData]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_median</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age_median]</local-name>
            <parent-name>[ZipData]</parent-name>
            <remote-alias>age_median</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>households</remote-name>
            <remote-type>20</remote-type>
            <local-name>[households]</local-name>
            <parent-name>[ZipData]</parent-name>
            <remote-alias>households</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_pct_own</remote-name>
            <remote-type>5</remote-type>
            <local-name>[home_pct_own]</local-name>
            <parent-name>[ZipData]</parent-name>
            <remote-alias>home_pct_own</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_pct_rent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[home_pct_rent]</local-name>
            <parent-name>[ZipData]</parent-name>
            <remote-alias>home_pct_rent</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income_median</remote-name>
            <remote-type>5</remote-type>
            <local-name>[income_median]</local-name>
            <parent-name>[ZipData]</parent-name>
            <remote-alias>income_median</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ZipData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10001:no:A1:G10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Product]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Name' datatype='string' name='[State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' default-format='*00000' name='[ZIP code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Age Median' datatype='real' name='[age_median]' role='measure' type='quantitative' />
      <column caption='Home Pct Own' datatype='real' name='[home_pct_own]' role='measure' type='quantitative' />
      <column caption='Home Pct Rent' datatype='real' name='[home_pct_rent]' role='measure' type='quantitative' />
      <column caption='Households' datatype='integer' name='[households]' role='measure' type='quantitative' />
      <column caption='Income Median' datatype='real' name='[income_median]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Zip' datatype='string' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Complaint Data'>
          <field>[Complaint ID]</field>
          <field>[Product]</field>
          <field>[Sub-product]</field>
          <field>[Issue]</field>
          <field>[Sub-issue]</field>
        </drill-path>
        <drill-path name='Location'>
          <field>[State_Name]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[ZIP code]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='E:/03-2020 SPG/03-Intro to Bus Analytics (C531)-Tues 530/05-HW/HW #2 Dashboard/Tableau/ConsumerComplaints+ (Dataset_final).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/18/2020 02:34:40 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='ConsumerComplaints+ (Dataset_final)' increment-value='%null%' refresh-type='create' rows-inserted='367002' timestamp-start='2020-03-18 02:34:40.941' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Complaint ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Complaint ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Complaint ID</remote-alias>
              <ordinal>0</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>348088</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product</remote-alias>
              <ordinal>1</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-product</remote-alias>
              <ordinal>2</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Issue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Issue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Issue</remote-alias>
              <ordinal>3</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>179</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-issue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-issue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-issue</remote-alias>
              <ordinal>4</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>5</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16654</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>6</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State_Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State_Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State_Name</remote-alias>
              <ordinal>7</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ZIP code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP code</remote-alias>
              <ordinal>8</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45787</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Submitted via</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Submitted via]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Submitted via</remote-alias>
              <ordinal>9</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date received</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date received]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date received</remote-alias>
              <ordinal>10</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4661</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date sent to company</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date sent to company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date sent to company</remote-alias>
              <ordinal>11</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4005</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company</remote-alias>
              <ordinal>12</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2729</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company response</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company response]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company response</remote-alias>
              <ordinal>13</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Timely response?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Timely response?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Timely response?</remote-alias>
              <ordinal>14</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumer disputed?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Consumer disputed?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumer disputed?</remote-alias>
              <ordinal>15</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Response Efficiency</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Response Efficiency]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Response Efficiency</remote-alias>
              <ordinal>16</ordinal>
              <family>ConsumerComplaints</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>428</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zip</remote-name>
              <remote-type>129</remote-type>
              <local-name>[zip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zip</remote-alias>
              <ordinal>17</ordinal>
              <family>ZipData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42686</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>18</ordinal>
              <family>ZipData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40925</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age_median</remote-name>
              <remote-type>5</remote-type>
              <local-name>[age_median]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>age_median</remote-alias>
              <ordinal>19</ordinal>
              <family>ZipData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1097</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>households</remote-name>
              <remote-type>20</remote-type>
              <local-name>[households]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>households</remote-alias>
              <ordinal>20</ordinal>
              <family>ZipData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35489</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_pct_own</remote-name>
              <remote-type>5</remote-type>
              <local-name>[home_pct_own]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_pct_own</remote-alias>
              <ordinal>21</ordinal>
              <family>ZipData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2842</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>home_pct_rent</remote-name>
              <remote-type>5</remote-type>
              <local-name>[home_pct_rent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>home_pct_rent</remote-alias>
              <ordinal>22</ordinal>
              <family>ZipData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2856</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>income_median</remote-name>
              <remote-type>5</remote-type>
              <local-name>[income_median]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>income_median</remote-alias>
              <ordinal>23</ordinal>
              <family>ZipData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40934</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.625498' measure-ordering='alphabetic' measure-percentage='0.374502' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Product:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Payday loan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bank account or service&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Debt collection&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prepaid card&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Money transfers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Consumer loan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mortgage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Student loan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Other financial service&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Credit card&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Credit reporting&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Demographic'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Demographic Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ConsumerComplaints+ (Dataset_final)' name='federated.1dodwlp1w9tl5419xvs960f8wjx3' />
          </datasources>
          <datasource-dependencies datasource='federated.1dodwlp1w9tl5419xvs960f8wjx3'>
            <column datatype='string' name='[Complaint ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column caption='Age Median' datatype='real' name='[age_median]' role='measure' type='quantitative' />
            <column-instance column='[age_median]' derivation='Avg' name='[avg:age_median:qk]' pivot='key' type='quantitative' />
            <column-instance column='[home_pct_own]' derivation='Avg' name='[avg:home_pct_own:qk]' pivot='key' type='quantitative' />
            <column-instance column='[home_pct_rent]' derivation='Avg' name='[avg:home_pct_rent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income_median]' derivation='Avg' name='[avg:income_median:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Complaint ID]' derivation='Count' name='[cnt:Complaint ID:qk]' pivot='key' type='quantitative' />
            <column caption='Home Pct Own' datatype='real' name='[home_pct_own]' role='measure' type='quantitative' />
            <column caption='Home Pct Rent' datatype='real' name='[home_pct_rent]' role='measure' type='quantitative' />
            <column caption='Households' datatype='integer' name='[households]' role='measure' type='quantitative' />
            <column caption='Income Median' datatype='real' name='[income_median]' role='measure' type='quantitative' />
            <column-instance column='[age_median]' derivation='Max' name='[max:age_median:qk]' pivot='key' type='quantitative' />
            <column-instance column='[households]' derivation='Median' name='[med:households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_median]' derivation='Min' name='[min:age_median:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[home_pct_own]' derivation='Sum' name='[sum:home_pct_own:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:income_median:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:age_median:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[min:age_median:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[max:age_median:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[cnt:Complaint ID:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[med:households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:home_pct_own:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:home_pct_rent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:income_median:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:age_median:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[min:age_median:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[max:age_median:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[cnt:Complaint ID:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[med:households:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:home_pct_own:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:home_pct_rent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Product:nk]' />
              <groupfilter function='member' level='[none:Product:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]</column>
            <column>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[Multiple Values]' />
              <lod column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[sum:home_pct_own:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]</rows>
        <cols>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]</cols>
      </table>
      <simple-id uuid='{AACDA362-983D-4706-ADA2-B6D2FBF66CA3}' />
    </worksheet>
    <worksheet name='Map and Complaint Origination'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Complaints by Location</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ConsumerComplaints+ (Dataset_final)' name='federated.1dodwlp1w9tl5419xvs960f8wjx3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dodwlp1w9tl5419xvs960f8wjx3'>
            <column datatype='string' name='[Complaint ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column caption='State Name' datatype='string' name='[State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-product]' role='dimension' type='nominal' />
            <column datatype='string' default-format='*00000' name='[ZIP code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Complaint ID]' derivation='None' name='[none:Complaint ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State_Name]' derivation='None' name='[none:State_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-product]' derivation='None' name='[none:Sub-product:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP code]' derivation='None' name='[none:ZIP code:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[Longitude (generated)]' field-type='quantitative' max='-6140011.0587056223' min='-15730018.719784873' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[Latitude (generated)]' field-type='quantitative' max='8079788.6063409597' min='1329058.3071231795' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]' />
              <lod column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Sub-product:nk]' />
              <lod column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:State_Name:nk]' />
              <lod column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:ZIP code:nk]' />
              <lod column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Complaint ID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[Latitude (generated)]</rows>
        <cols>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AD56B50E-783A-4456-9ABD-B369F682B01E}' />
    </worksheet>
    <worksheet name='Product Issues Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='ConsumerComplaints+ (Dataset_final)' name='federated.1dodwlp1w9tl5419xvs960f8wjx3' />
          </datasources>
          <datasource-dependencies datasource='federated.1dodwlp1w9tl5419xvs960f8wjx3'>
            <column datatype='string' name='[Complaint ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Issue]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-issue]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-product]' role='dimension' type='nominal' />
            <column-instance column='[Complaint ID]' derivation='Count' name='[cnt:Complaint ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Issue]' derivation='None' name='[none:Issue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-issue]' derivation='None' name='[none:Sub-issue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-product]' derivation='None' name='[none:Sub-product:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Issue:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Loan modification,collection,foreclosure&quot;</bucket>
              <bucket>&quot;Loan servicing, payments, escrow account&quot;</bucket>
              <bucket>&quot;Incorrect information on credit report&quot;</bucket>
              <bucket>&quot;Cont&apos;d attempts collect debt not owed&quot;</bucket>
              <bucket>&quot;Account opening, closing, or management&quot;</bucket>
              <bucket>&quot;Deposits and withdrawals&quot;</bucket>
              <bucket>&quot;Communication tactics&quot;</bucket>
              <bucket>&quot;Disclosure verification of debt&quot;</bucket>
              <bucket>&quot;Application, originator, mortgage broker&quot;</bucket>
              <bucket>&quot;Billing disputes&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Problems caused by my funds being low&quot;</bucket>
              <bucket>&quot;Credit reporting company&apos;s investigation&quot;</bucket>
              <bucket>&quot;Managing the loan or lease&quot;</bucket>
              <bucket>&quot;Unable to get credit report/credit score&quot;</bucket>
              <bucket>&quot;Settlement process and costs&quot;</bucket>
              <bucket>&quot;False statements or representation&quot;</bucket>
              <bucket>&quot;Problems when you are unable to pay&quot;</bucket>
              <bucket>&quot;Improper contact or sharing of info&quot;</bucket>
              <bucket>&quot;Repaying your loan&quot;</bucket>
              <bucket>&quot;Identity theft / Fraud / Embezzlement&quot;</bucket>
              <bucket>&quot;APR or interest rate&quot;</bucket>
              <bucket>&quot;Making/receiving payments, sending money&quot;</bucket>
              <bucket>&quot;Taking/threatening an illegal action&quot;</bucket>
              <bucket>&quot;Closing/Cancelling account&quot;</bucket>
              <bucket>&quot;Credit decision / Underwriting&quot;</bucket>
              <bucket>&quot;Using a debit or ATM card&quot;</bucket>
              <bucket>&quot;Dealing with my lender or servicer&quot;</bucket>
              <bucket>&quot;Can&apos;t repay my loan&quot;</bucket>
              <bucket>&quot;Late fee&quot;</bucket>
              <bucket>&quot;Credit reporting&quot;</bucket>
              <bucket>&quot;Improper use of my credit report&quot;</bucket>
              <bucket>&quot;Credit monitoring or identity protection&quot;</bucket>
              <bucket>&quot;Credit determination&quot;</bucket>
              <bucket>&quot;Customer service / Customer relations&quot;</bucket>
              <bucket>&quot;Taking out the loan or lease&quot;</bucket>
              <bucket>&quot;Credit card protection / Debt protection&quot;</bucket>
              <bucket>&quot;Advertising and marketing&quot;</bucket>
              <bucket>&quot;Billing statement&quot;</bucket>
              <bucket>&quot;Delinquent account&quot;</bucket>
              <bucket>&quot;Payoff process&quot;</bucket>
              <bucket>&quot;Credit line increase/decrease&quot;</bucket>
              <bucket>&quot;Transaction issue&quot;</bucket>
              <bucket>&quot;Other fee&quot;</bucket>
              <bucket>&quot;Rewards&quot;</bucket>
              <bucket>&quot;Charged fees or interest I didn&apos;t expect&quot;</bucket>
              <bucket>&quot;Collection practices&quot;</bucket>
              <bucket>&quot;Collection debt dispute&quot;</bucket>
              <bucket>&quot;Fraud or scam&quot;</bucket>
              <bucket>&quot;Unsolicited issuance of credit card&quot;</bucket>
              <bucket>&quot;Shopping for a loan or lease&quot;</bucket>
              <bucket>&quot;Balance transfer&quot;</bucket>
              <bucket>&quot;Managing the line of credit&quot;</bucket>
              <bucket>&quot;Other transaction issues&quot;</bucket>
              <bucket>&quot;Forbearance / Workout plans&quot;</bucket>
              <bucket>&quot;Account terms and changes&quot;</bucket>
              <bucket>&quot;Money was not available when promised&quot;</bucket>
              <bucket>&quot;Can&apos;t contact lender&quot;</bucket>
              <bucket>&quot;Getting a loan&quot;</bucket>
              <bucket>&quot;Privacy&quot;</bucket>
              <bucket>&quot;Application processing delay&quot;</bucket>
              <bucket>&quot;Bankruptcy&quot;</bucket>
              <bucket>&quot;Applied for loan/did not receive money&quot;</bucket>
              <bucket>&quot;Other service issues&quot;</bucket>
              <bucket>&quot;Arbitration&quot;</bucket>
              <bucket>&quot;Can&apos;t stop charges to bank account&quot;</bucket>
              <bucket>&quot;Received a loan I didn&apos;t apply for&quot;</bucket>
              <bucket>&quot;Sale of account&quot;</bucket>
              <bucket>&quot;Shopping for a line of credit&quot;</bucket>
              <bucket>&quot;Payment to acct not credited&quot;</bucket>
              <bucket>&quot;Managing, opening, or closing account&quot;</bucket>
              <bucket>&quot;Cash advance&quot;</bucket>
              <bucket>&quot;Overlimit fee&quot;</bucket>
              <bucket>&quot;Unauthorized transactions/trans. issues&quot;</bucket>
              <bucket>&quot;Cash advance fee&quot;</bucket>
              <bucket>&quot;Balance transfer fee&quot;</bucket>
              <bucket>&quot;Wrong amount charged or received&quot;</bucket>
              <bucket>&quot;Charged bank acct wrong day or amt&quot;</bucket>
              <bucket>&quot;Convenience checks&quot;</bucket>
              <bucket>&quot;Incorrect/missing disclosures or info&quot;</bucket>
              <bucket>&quot;Customer service/Customer relations&quot;</bucket>
              <bucket>&quot;Fees&quot;</bucket>
              <bucket>&quot;Lender repossessed or sold the vehicle&quot;</bucket>
              <bucket>&quot;Adding money&quot;</bucket>
              <bucket>&quot;Excessive fees&quot;</bucket>
              <bucket>&quot;Advertising, marketing or disclosures&quot;</bucket>
              <bucket>&quot;Lost or stolen check&quot;</bucket>
              <bucket>&quot;Disclosures&quot;</bucket>
              <bucket>&quot;Unexpected/Other fees&quot;</bucket>
              <bucket>&quot;Overdraft, savings or rewards features&quot;</bucket>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Incorrect exchange rate&quot;</bucket>
              <bucket>&quot;Lost or stolen money order&quot;</bucket>
              <bucket>&quot;Lender sold the property&quot;</bucket>
              <bucket>&quot;Lender damaged or destroyed vehicle&quot;</bucket>
              <bucket>&quot;Lender damaged or destroyed property&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Product:nk]' />
              <groupfilter function='member' level='[none:Product:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Sub-issue:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Account status&quot;</bucket>
              <bucket>&quot;Debt is not mine&quot;</bucket>
              <bucket>&quot;Information is not mine&quot;</bucket>
              <bucket>&quot;Frequent or repeated calls&quot;</bucket>
              <bucket>&quot;Not given enough info to verify debt&quot;</bucket>
              <bucket>&quot;Debt was paid&quot;</bucket>
              <bucket>&quot;Account terms&quot;</bucket>
              <bucket>&quot;Attempted to collect wrong amount&quot;</bucket>
              <bucket>&quot;Problem getting my free annual report&quot;</bucket>
              <bucket>&quot;Public record&quot;</bucket>
              <bucket>&quot;Problem with statement of dispute&quot;</bucket>
              <bucket>&quot;Right to dispute notice not received&quot;</bucket>
              <bucket>&quot;Threatened to take legal action&quot;</bucket>
              <bucket>&quot;Personal information&quot;</bucket>
              <bucket>&quot;No notice of investigation status/result&quot;</bucket>
              <bucket>&quot;Problem getting report or credit score&quot;</bucket>
              <bucket>&quot;Talked to a third party about my debt&quot;</bucket>
              <bucket>&quot;Report improperly shared by CRC&quot;</bucket>
              <bucket>&quot;Debt resulted from identity theft&quot;</bucket>
              <bucket>&quot;Reinserted previously deleted info&quot;</bucket>
              <bucket>&quot;Contacted me after I asked not to&quot;</bucket>
              <bucket>&quot;Threatened arrest/jail if do not pay&quot;</bucket>
              <bucket>&quot;Threatened to sue on too old debt&quot;</bucket>
              <bucket>&quot;Contacted employer after asked not to&quot;</bucket>
              <bucket>&quot;Debt was discharged in bankruptcy&quot;</bucket>
              <bucket>&quot;Called after sent written cease of comm&quot;</bucket>
              <bucket>&quot;Used obscene/profane/abusive language&quot;</bucket>
              <bucket>&quot;Problem with fraud alerts&quot;</bucket>
              <bucket>&quot;Investigation took too long&quot;</bucket>
              <bucket>&quot;Inadequate help over the phone&quot;</bucket>
              <bucket>&quot;Not disclosed as an attempt to collect&quot;</bucket>
              <bucket>&quot;Impersonated an attorney or official&quot;</bucket>
              <bucket>&quot;Sued w/o proper notification of suit&quot;</bucket>
              <bucket>&quot;Called outside of 8am-9pm&quot;</bucket>
              <bucket>&quot;Seized/Attempted to seize property&quot;</bucket>
              <bucket>&quot;Indicated committed crime not paying&quot;</bucket>
              <bucket>&quot;Account terms and changes&quot;</bucket>
              <bucket>&quot;Attempted to/Collected exempt funds&quot;</bucket>
              <bucket>&quot;Billing dispute&quot;</bucket>
              <bucket>&quot;Problem cancelling or closing account&quot;</bucket>
              <bucket>&quot;Sued where didn&apos;t live/sign for debt&quot;</bucket>
              <bucket>&quot;Indicated shouldn&apos;t respond to lawsuit&quot;</bucket>
              <bucket>&quot;Receiving unwanted marketing/advertising&quot;</bucket>
              <bucket>&quot;Contacted me instead of my attorney&quot;</bucket>
              <bucket>&quot;Report shared with employer w/o consent&quot;</bucket>
              <bucket>&quot;Received marketing offer after opted out&quot;</bucket>
              <bucket>&quot;Insurance terms&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Sub-product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Other mortgage&quot;</bucket>
              <bucket>&quot;Conventional fixed mortgage&quot;</bucket>
              <bucket>&quot;Checking account&quot;</bucket>
              <bucket>&quot;Other (phone, health club, etc.)&quot;</bucket>
              <bucket>&quot;Conventional adjustable mortgage (ARM)&quot;</bucket>
              <bucket>&quot;FHA mortgage&quot;</bucket>
              <bucket>&quot;Non-federal student loan&quot;</bucket>
              <bucket>&quot;Credit card&quot;</bucket>
              <bucket>&quot;Vehicle loan&quot;</bucket>
              <bucket>&quot;Medical&quot;</bucket>
              <bucket>&quot;Home equity loan or line of credit&quot;</bucket>
              <bucket>&quot;Other bank product/service&quot;</bucket>
              <bucket>&quot;Payday loan&quot;</bucket>
              <bucket>&quot;Savings account&quot;</bucket>
              <bucket>&quot;Installment loan&quot;</bucket>
              <bucket>&quot;VA mortgage&quot;</bucket>
              <bucket>&quot;(CD) Certificate of deposit&quot;</bucket>
              <bucket>&quot;Mortgage&quot;</bucket>
              <bucket>&quot;Auto&quot;</bucket>
              <bucket>&quot;Personal line of credit&quot;</bucket>
              <bucket>&quot;Federal student loan&quot;</bucket>
              <bucket>&quot;International money transfer&quot;</bucket>
              <bucket>&quot;Reverse mortgage&quot;</bucket>
              <bucket>&quot;Vehicle lease&quot;</bucket>
              <bucket>&quot;Domestic (US) money transfer&quot;</bucket>
              <bucket>&quot;Second mortgage&quot;</bucket>
              <bucket>&quot;Cashing a check without an account&quot;</bucket>
              <bucket>&quot;General purpose card&quot;</bucket>
              <bucket>&quot;Title loan&quot;</bucket>
              <bucket>&quot;Gift or merchant card&quot;</bucket>
              <bucket>&quot;Government benefit payment card&quot;</bucket>
              <bucket>&quot;Mobile wallet&quot;</bucket>
              <bucket>&quot;Check cashing&quot;</bucket>
              <bucket>&quot;Other special purpose card&quot;</bucket>
              <bucket>&quot;Debt settlement&quot;</bucket>
              <bucket>&quot;Pawn loan&quot;</bucket>
              <bucket>&quot;ID prepaid card&quot;</bucket>
              <bucket>&quot;Credit repair&quot;</bucket>
              <bucket>&quot;Payroll card&quot;</bucket>
              <bucket>&quot;Traveler&apos;s/Cashier&apos;s checks&quot;</bucket>
              <bucket>&quot;Money order&quot;</bucket>
              <bucket>&quot;Foreign currency exchange&quot;</bucket>
              <bucket>&quot;Refund anticipation check&quot;</bucket>
              <bucket>&quot;Transit card&quot;</bucket>
              <bucket>&quot;Electronic Benefit Transfer / EBT card&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]' direction='DESC' measure-to-sort-by='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[cnt:Complaint ID:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#a7acad' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk] / [federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Sub-product:nk])</rows>
        <cols>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[cnt:Complaint ID:qk]</cols>
      </table>
      <simple-id uuid='{48045C10-9FF4-4E27-867B-B714676710BD}' />
    </worksheet>
    <worksheet name='Response Efficiency'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Response Efficiency</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ConsumerComplaints+ (Dataset_final)' name='federated.1dodwlp1w9tl5419xvs960f8wjx3' />
          </datasources>
          <datasource-dependencies datasource='federated.1dodwlp1w9tl5419xvs960f8wjx3'>
            <column datatype='string' name='[Complaint ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Response Efficiency]' role='measure' type='quantitative' />
            <column datatype='string' name='[Timely response?]' role='dimension' type='nominal' />
            <column-instance column='[Response Efficiency]' derivation='Avg' name='[avg:Response Efficiency:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Complaint ID]' derivation='Count' name='[cnt:Complaint ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Timely response?]' derivation='None' name='[none:Timely response?:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[cnt:Complaint ID:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:Response Efficiency:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[cnt:Complaint ID:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dodwlp1w9tl5419xvs960f8wjx3].[avg:Response Efficiency:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Product:nk]' />
              <groupfilter function='member' level='[none:Product:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]</column>
            <column>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]' value='128' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]' value='41' />
            <format attr='width' field='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]' value='124' />
            <format attr='width' field='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Timely response?:nk]' value='76' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[cnt:Complaint ID:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk] / [federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Timely response?:nk])</rows>
        <cols>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{14CE55C1-3FA7-40D8-A84B-4CF043814C37}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='61250' id='3' name='Product Issues Bar Chart' w='49200' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='36750' id='5' name='Map and Complaint Origination' w='49200' x='800' y='62250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='61250' id='6' name='Response Efficiency' w='49200' x='50000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='36750' id='7' name='Demographic' w='49200' x='50000' y='62250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='11' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='10' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='61250' id='3' is-fixed='true' name='Product Issues Bar Chart' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61250' id='6' is-fixed='true' name='Response Efficiency' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36750' id='5' is-fixed='true' name='Map and Complaint Origination' w='49200' x='800' y='62250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36750' id='7' is-fixed='true' name='Demographic' w='49200' x='50000' y='62250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1960C21A-756D-4CE8-B7D4-D4586BE465BE}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Product Issues Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Complaint ID:nk]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Issue:nk]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Sub-issue:nk]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Sub-product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07A17336-380E-4BD4-AE60-ED7543193AE1}' />
    </window>
    <window class='worksheet' name='Map and Complaint Origination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Complaint ID:nk]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:ZIP code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C413A58-5FBA-4F94-A77B-4ABC003C6B34}' />
    </window>
    <window class='worksheet' name='Response Efficiency'>
      <cards>
        <edge name='left'>
          <strip size='255'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[cnt:Complaint ID:qk]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Complaint ID:nk]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Timely response?:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EFCD3FB-6AC2-45F3-A81E-6545912FDCCD}' />
    </window>
    <window class='worksheet' name='Demographic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[:Measure Names]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Complaint ID:nk]</field>
            <field>[federated.1dodwlp1w9tl5419xvs960f8wjx3].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63F10CF7-AB57-4C4B-92CF-10149F3724C1}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Demographic' />
        <viewpoint name='Map and Complaint Origination'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Product Issues Bar Chart' />
        <viewpoint name='Response Efficiency' />
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{9F417DCE-95B1-472A-A2F4-FB2A2FE8C645}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Demographic' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map and Complaint Origination' width='192'>
      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
      pBBoMkQRJYrOJqnaJs3yLDWnxb99T2F9eZX2zmXGho9ixuFrp7N4jRVyaoXY1HeZdDaJleq8
      8/4DWkocb/WnqMWP0VQxUIDPEkIIMiMnKfkTLFc1sslDfDJ7DylVnGacn12uE5MlYslJXv/a
      36Ih4uixbHdH9zwXz/f2PM8wDGzbRgQtmlsr/NdfXGF5awfHaewKXthJfqlJVhtL/O8/+Rm/
      vvIu1XrjkfVZu8qYEC6nD3+NYJeUqrnzcbfk4N0bS/wv/+Eu719dZTyr88qpPNOjIxwdGiOX
      iu1bsNdbbiGl5MbNj5m9/dGBlC63718nrC+SzBzCHTpPqAnM5ATtmMWx+AqbLcHqGly6fpuR
      3BkUr0kiO4GWO0w8FxA/9S3y2Sy22sTVFdTRb6Ckprnyi383iAJ91pBScnwqy7sfXUc6NU4d
      P4ymgIeCgs2h8R1uLRqU2zazCz+mkD3EVi2kXC2jCJd4rDORsdfEUBSF1Y1Nrq/5BE6TI5Mj
      2J4CYafPd3H7Q7KJURJ6itFYyPTIKKlkpwx5tdQmkzBYXlwgndktU1Akd6t3GfdtQiONlZom
      pCPIqhT8xUerrLcMTkx4HD50AcVM4AkTIR6WV/e+oLP7R3kNp3K/0wM8fJggcPEDD7nb9O84
      DhNj04R6lp/evoxuBGRzp1isLTJZvMHIsW+SM0LSM0MoiQka3g7HCucwarOkxs9TSIwSUxKs
      l+9QY5bc8EtkzBza5seMnP3DgQJ81hBCoKgm5oN3uVcscWbCwBc6puZTLP4Q33qTtaLH6to6
      U1OvYxk6teYDqi2LrcoswgiJa3udTEVRSCUUKqUVXk/FSE1OYRkqmqYiG/MUkiPUH/yY+a06
      12Y3OHf6fLe3OG4qtNttRkbHuuaL7/m4dop0JkuzbXN3c5FKs4YpNFq+gtcs8c+/P0ROCVA8
      m6ZI4/odO991XdrtNqaqduqZe5QgSuSl8ofIFw51yLF8jyDw0Vp2Z2iIt8GGUyar6hzPDZGM
      DfPh/Xn08ockJ15javol2mqao5NnWZy/x4WZc7Sr99GKd5grbSONAmHzATutPL9z8jvkpUoz
      MNEyU7TsxkABPg+QUuLGkyysbFFau0/DF6Szk2SG3sCpbHDz3hJrFZsHS2usbS1ybVEnaWm8
      cmSKXLJAGO7dXcvVEo22g+e7FLdvYiYL6IYOQkELbCquzr/5yRrTIzHmqiHnD09Sq9VQVZWs
      2gI9wdzdS+QLU4ReHd9tkkun8YNOXiGummB3+pGzCRO9+hG58TOI+ARNmaJc69jzzWbzIQVi
      swW6BlJwb/U2iqUT1/Y23wMgZCfppalIGYKaJmPlaW9fQzFzCKnw7uVL5PUhKs3bFLIzqGaC
      ys4NVKNFXk8QWsO42WMM52fQFQXLqZHJjyNK9xCqSVtNoy6/zdVr1wZRoM8LfN+n2Wxw5fY8
      1xYqnJfX+b+u63jAVjuGAE4M+yjNJZbdSS5Mx3nz4lE8ZYOzI+e4cmeRYzPTmLsD6sIwZKe0
      TSaVwm03MawESAUPj4W1NYaTGW6ULjFinKNcWeH01GlMw+DKtY8YycdYX1rnpW98FwIf3/PQ
      tL0ysqds2t4hiI/Qri2gxSY7vw8e6u4A7N5rIeD+3feIT77EeDz5yPOitSsiwGit4co4bhBS
      cxX0pEboVmg4goXaImecEuboK5QcE1mfZ1XUOZmZ4XZphSNDMyhOA2mMEYoAQoGya1Z5zUWC
      UOWHv34wOAE+L5BS4ngujVYTUw04fv4iV+5vUW+Dj4IXCrYbgh0nTdtXKVbqpKwaP7vUIGO0
      OXPsEKr2UOA6jS4GzXqdXMLAEzqBCCi1tzmSSqDoSYaVOOnaJaz8RYp1m1TMYGpymvLqPLFM
      nrntEi0RRyHA0rU9lZy9J46vdpxlRX84qX6++oCs+XBMalcJAhujvUY6c5gde4uEnuh5Zkjg
      NZBSJQgljpIkVA2kFkO6a+haGmf1KjevXMYYLXBo+rt8sn0fRWbRNZNh0eDGisepiVPEzASi
      toASHyMgQFdVrPv/BTJTaNUl9MwRTDUYKMDnCc1Wm+1Ki6NTE4wND/PdV0/w5uk8ioRby1U6
      I+E6QueEGthrFFtJzuZ2cJUk6WSawK2gqBb3VjbIpxNomooZtvDVGFIIthfn8auL/Kf35vjT
      X88jrAJnjkwxnFBRnBKetMjkhqi3tjl5+DRZS0OBPVPsD+IfFUIQOEWkapIzc93iND/oDM0A
      EFJDT03jui5xM87CVpVw+TIxQxDqCYqNVSr1JRJmDpCdXuIQNDOPkCo6Hn922+MHr71Js95g
      KpHDkCH17Xk2r/4Mc+wUMi4wqk2EruIKi6X6PHEjyXZ1jqTdACtL0xyjaKsDBfg8wTINJoZz
      JONWN5qTSGaYHIqRs1xWtio0HVB2qUFemoiDYiCsEQqxBrncKIHXBGkSOFvELQukQTM0KTUc
      LB1S2SH+tz+7zqUVjYans1OpM6RWGJs6wkrFxw879OXpWB5v9ySJMs5Al5YE9kaeuj9DFynB
      cxuw28L5wfVZJoZze2qBPM/DMiwS6z/nP1ypc3d5lYa5zPTQeUxjCLlrPtlep1ZJdUpIrwnJ
      KV4+MYGu6sjyVczEMO999DELO1eZr+VQNRvhlWmUb7C48FOSY68ynppie6eII7Ms1SWpVApV
      j5G32gMF+CJgdXWVY1Nj/MHrx2nVdtiuOxQSm7w2YfC9C+NcODmJszNLUlfAyBEiMYwkUukI
      oCIhpiv4oYvjeRybnuLD2S2kVKi0YaVYZzKnYns+iXgCQ1MIZUdYzdocrpZ+hJ/0oJPACwQ/
      euc9jswcw/dDmo7HxOgQan8YNOwolZEsEErJSNLg+Mx5FGmg7lboCCG4vVmkkIqBGiNUY9wt
      PWA0OYprFxECPlqusOUmuLnscE5eoaC2SRQukhp9HWGpxGJjtOtVfLfB9TuzaEac8eFhTOGw
      s7k0cIK/COi1vV3X5V//Hz/lxmKZ/+mvTnM042AZAteawjQ1tqt1mrZOJqYQ222l7Eel5WEq
      AZdv3OOdK/OM5U3+yd/+PZq1FXbsIcZyFm79AWbyKEpzkaY6+sj0mX4FkFKysrJKeiRJSu/w
      ie6Ud3BcQQOFo0OdUK2Cj1Q0lkt3mcyfpLE9Rzwzgr99Cyd/BlWo6H4TV0l0Th5VZa3YpJA2
      UQSI0GO1skosrLDZ8FEaNf70gwazO53SkDeHr2Els7xx/izLrsq59kfMtseJjSU5c+jbtMrr
      JNJDNLfv0tIyg0zwFwG9nVSqqjI9kiFE8EdvL3Ht8idUZRZNNfj1O29RW73K+FBil3FhfyLd
      tKWyub3BULjK6eQmf+W1o/w/78zSlmN4gU8YBFjxKYLl92kpBdrebphSBASN5Uczu4EHYcDw
      UBqnvoTb3iIMQyzLYKyQ49BQnJJToh20UNwqztYdDvltPK9NzlQIhAmFi2hCRxECvzaP5RZR
      nQ00r854LkbDqxDQmTM2np4gUI7Qnr3GX/56qSv8AB+XzzORm0Rd/zne3Lts+YeQ8Rhp02Jl
      Y5uin2Jlc5W31iq0vNhAAb4I6BU4IQSvzcRQ8HntVILRl2ZYLFYJkJA/w9DERVzb4c9/dY2r
      N65i2809DBARJsfGOfHym/ytr4/iqQ6nhtt88os/Zqd8BVVVWK6u0EifoNpy8HzwhbdbYxTf
      s/tLKdkuVSg2HNYrFdr+BNChOzG1TnSo7rRQpYGpWFxbKeKHIe3sGT5Y/ZB2fJr1cpsgqg9C
      sG2N0TZytKROvdlg/eMfYtIJY4ZC4oeC9eImmmnjmjkinpWkZnNmcp2sv8A6CilFcGO9zNXV
      TebvrlDdWWCldIf//Ot7KO0Qu748MIG+iHBdl7XNIqoSokgB4cMSiKhRpdSog+PiujaaESOV
      iHeYpd0QS3/oyCqKwtsffczcwjbrTYN/8Xe+RdyQrJQXGEtNd0Oqm84ao+bE7vPZdYxV5q79
      nNvrOi+/eph8aqgzCK9H2VRV5YPb1zl6aIS0lu36ErZtY9VuEBZeoUN6IrD9Nvqu4+wENmW7
      xI/ee5/h8hZ/4wd/k4YX4tvrxAsvs7y6QmPuLa5W8rQ8laJt0KqV+LsvO9SqSxjDr1CZvcJi
      K0VTi/O9UwlaYYaPF9vc2Qn5/ZdNXo1tD5zgLyIURSGZiGG323v4fHp7hC29w7mvaTrtVpNm
      s4mUknLTJxXrNJqEfg2EgpnyWd1Y4t5ayPFhSaNtMzJ0CEUCIqTYLjJsjXaVpu26LK+vk0km
      GRqbYX7pAeNDgmpDJZ2MPbLebCJJfHcId2/CS4vn2Kq2ef/WJcZGClxdv8xEsjMwUKIQ1xIc
      HR+mMJknaaQJq/dJjFxgsbZCMhQUzcMMFYY4HGvznXN5miJOymowJtoE+jCLaobRjMWFiQaZ
      ofOYlbc4eeYiajjLzJFTxEZfGZwAX1RENfWlUqn7Xi+3Z6+ZEoUyG40GKXcDX7FwzSEkLaQS
      o+H4/H9/+T6HMg4vv/oGpZ0yiVQKTbp4gURacdKaRhj4OI6D53mUgh3GYhN8dG2WTD7Fv//z
      y/zTP3wVCMjnCig9rNb9zS6aKvHbq1R8ya9/dZlvDtdIn//rqFp2z+8yV73PZHwMKQxWNzfI
      JhMkLR2pJfA8F0KP+oNfoIdF5s0sYegznpmhWqtw675DWGiSV0Kmhr9FbPt9jOYcwZHvcWdN
      MpktslbJDBTgi4wgCNja2nqEylBV1c4w7CDo1uO02+09lZilUqk7fqnY8pmfv0w2HuPUiKD4
      0dskv/0vias1FC1DgIaUHfNqZ6czsUVV1e6pE/gO715f4KPbt/g7v/ct8pk0gn06vNxqpxhO
      S1FtO6hunbS/TTh0Bs/zHp4wjsPV5Vny6RQZC+JKAdMw+ODKu5zTFhBn/yFx6ePZO9TtkP/3
      rR/yarbMKxf/GlvlZbTsKywXHfLqLJ48Rli7y9bd90me+l3Ghgooaha3cZuVhjVoifwiQwiB
      ZVk0m8097wHdRnl9t3MsYpGIRpKm052yhSAIMGMB1cYx8vk4oWbRPpYlLC+THxljdeE2saFD
      uP5D5Yma2aWUHRNMqLxx/iivnJqkWW8iBQghHx3npOhEzHht12U4mUOEFnhNpNAJdsmzNAGN
      koIqYDo1xubmJslkklNHLtByTxGv3iJMH+fewiJXtmq4YQZz/AJtfZSxrMby3CVOnPkeuDpW
      LM0f//QmMzM/IAwDZOCiNe+xYeucPXJ+cAJ80REEAdvb211hi5jjstnsnshP5MyWSqU9u22E
      /kgT0N3Fg77NvPfeyO+IzKxWq4XnB2iJDCbuE9cvhcB3i8xXF8kkpsgbObT6CrM1STqRIBWL
      A7C8scb02AS2bWOaJldu3eAnl++i6Blem1zj22/+fSjdQKQOIwIfpMaNjRtMp0bZqvv4TpOx
      4aMIRWKGDZbvfQwYgzDoFx1CiM5QuV1EBFftvhbDXvNnP/TSoUdT4P0g7JBj7TOwovf7et+3
      LAtVkVQ3V/bwjGp+fQ9xbShCECFBGCLULEfyL5Mz8gQh2PEJpkbGSCeSXd7Sw2MjCAGWaVKe
      /5BKw+PssRnMbItXJnOoikojMc0vP/kVdujjF2+yuOawef895rZvkkxOkBdlri2uoLV2SEyf
      QmT1gQJ80SGEIB6P79mJowb5/a7tnUD/IrCfYliWxdDQEBsbGw/zBc0tZPiwP7jltWj77Uee
      E0GKjrHUfbW2aFa3cepF/MYiY8om711doLJlsNEysRfeornxMe/eDrk6+w5oeRoNgzB1kVTN
      J2MprBbXWC6tci9I0gwcpsYuDHyALwOEEJimSaPR6evtbT7vT4AlEglKpdIzK0F/Adx+n/VC
      Skk2m6XZbGJZFnZyZs/nMeXRcOl+kI0GQkr82DhxIVhcWWA0N8qHd1aoOUl2dgLWyi52Mokh
      xnj1/BrLxTi/unGTpQ2PmLvOsaOjJA3JQmWZkzGXIfMIl29VuepsDxTgy4JeBQC6tB+9iJgj
      FEXZ9/PHoT/S9DRQVZVKpUIsZu2WZTycQHMQFEXZwyThx+PE3G1mVzfZbJicHddZnmsiY+OY
      sRKvZVycehV1x0JMe7QXWpxT1rlaTVL2k/z4doiejKG6N7g+V+eDpSTfbv0c3xmmWgoHCvBl
      QeT8RsIT+QFmX0FcxBzxrAoQ4XEnwX6QUhIS0HJaJMwEWnWOduIw0Gl4r9Vq6LreVc6PF7e4
      OJnCineG9wVhQNjYRvc08s0PWLxa495mlfVWjuOjWcaHFL555izx9FF2Zn/MUAKuOCmKTueE
      qTuwVdzkzVOTNMJDFB2fPzj5EqEIkObIQAG+LBBCkE6nqdfrXdLcarWK4zgkkw+ZIyKfwbbt
      Z1KC3p37aYUfIJPJYGx+jDr6Gp4fECRnIAzxfR/btikUCl1TzbZTzC27AAAKmElEQVRtzoyk
      qBQ3iCc7/QObjSZm+jBj+TifeA94d67NRwsnyKUN3pge4g/eOE2ruoAfSuphgbERD2fzJqo0
      iRpqlFicjcDnpRMv8carw7sDB3dJhp/+n3iAzzOimH82myWVSnUFttVqUS6XO+HJiA1NSizL
      esITX9y6/OGL7BRLXUJcgHq9TiaT6foqQRA8ZI9ODFOqN1ktlghcySerW1SLsyS8HPGgiaYE
      /P5klXOHswSBh2XlUNwq48cukrUKaJsh//jkPN+YcTk1bLOzsMiI55HJT2GaHVbsKE8yOAG+
      IDhoHGo/esOi1WoV6JgapmnuqRuybfuxvJz9u/1+u3+kZE+y672wczp5nsfm5maXELd/5FMY
      hsRiMRRFwXEcRjNpQhGSSuSIS5NEKkCyyUj2Cm396wgjhu/WqG4vkU5lWW0GjMc0Lrz2fZZm
      /xSxVee/+90jCO0QhZnpveOfot9hkAj7YuBpFaD3+nq93nWMo/KIaGZwo9FAVVWq1eq+uYHe
      sGS/gPcK0pPIbfshpcR13W4pRe9zen+/SqVCzAjRzEy3ZEOv3MfPnWD2/iUmhodohSqVYoPp
      0Twf/vw/c+7l3+WT+iInY0fI+Et4mePkhyaJxRIHrmegAF9ihGFIrVbrlkqoqkomk0FRlK5Q
      NxoN6vX6vvceJNT9xXZCiAMTbE+LfgVQVZV6eRXFWUXLdVimVVXB9wMajkuyNceWYmJoOVJW
      HLe+xPpKmSNnLjK31WR6JEM2lXjipjHwAb5k6G9b1HtYpD3Po1Kp7NnZ4/F410l+WvQrx4tI
      rPU/w/d9mo6KMfRKt/6I0i2EECQMHQuPnDmMU69Q9zW22nHGT5wnkcpw4djEUwk/DBTgS49+
      O7s/QxwV1D2rU/y48ogn4WkEMwxDUqkUGxsb7FTKhO0WbXOq6zT7iSmuL7+P7dSYv/Mn3Fle
      I27FuuOjnjpM+0wrH+Bzj8jGbjQatFqtLqVJr0D0zxaTskMVUigUug704/h/XgT2e3YvdTo8
      NNlcX0XWG1y6V0JRFLbqi9wpNZgaOspscY2lrTjfPzNFPH6wrX8QBlGgLyEiPs5arbbHXo+E
      q1KpAJ3scYQoLh6FB6OS54PQGwF6VjzLfZqmMZGxaa7f4ltpjzCcIKvqhLrBRqvFiaEpwkKG
      xMiR51rLQAG+hIhCoZ7n4TjOI9GcyDmOwpG9ME1zz8nh784E6MfzCn+0joOwX7hVGimKqRNo
      iRwaoJqjFJs3OJSfIa7FyWZyzzQ8fM9aBlGgLy8iBrZ6vf5wYF7Prm6aJul0et++Adu2aTQa
      3bm+B+FZTaUn5Qx6r+t9fr3eoB2oTFhNXC2DGwZIOqXSuVxu3xj/02DgA3yJEdXXpFIp0uk0
      icTeyIht25TL5T0CHnEQdWf59vkP/XheR/hp0NtAH0/E8X0P18gTColRX3kmZ/cgDBTgKwBF
      UTAMA9M0SSaTe5JXjuM80jwDHcc4mUySyWT2+AX74WmU4FlPil7h3/0Dwm3w8fwyvtfk5q3r
      fPxgmdvFVUorN59bAQc+wFcIUchT0zRqtVrXP2i328RisUcEtN8MeVKy60k9A8/rMEfPHB4e
      Ju7XmNuu8O8uB7yW+r+pmMMUfu97ZJ/z+QMf4CsK3/cpFovd5vZ8Pr+vI9lsNmk0OgP2IlPp
      0+z0/Rnkx50e+/UpQ6ePeKW0hfQEV2bnyKYT/ODb33ouR3hwAnxFIaXsjFX1/U7/r+/vK0C6
      rnfZJCKBPSgy9Dzod8Cf8iYmcsMATIyOdJNfz4OBD/AVRq/QVCqVfU0cRVFIJpMkk8k9xFvP
      i97dPlKm/gTYftf2Yr9G/Odd0+AE+AqjtyHG931ardYjvkCUIIuSZO12u2sSPe8p8Cz3HtSK
      GYZhN4P9vDkAGJwAA/SgXq8/tktMURQsy+rW7O9ndvSXUb+IcoroeRFdy+M4jZ4VAwX4CiOV
      Su2pFn2aSE23lXCXr+dxiJ73aZWgl+XiICV4XgwU4CuKSJDT6TTxeLwrpJ7ndekTD4rMmKZJ
      NpvtTnrvR7+dHyXXXsRp0KtQkRn0aTBQgK8wIiVIJBJks1kURaFarVIul7t2/uPuS6fTPEsI
      /XkUYU/4s+/eF3EKDBRggG7JRDbbGWDheR6NRmNfdrleKIpyoBPaT7P4tML6uGxz9HmvSfRp
      MVCAAYCHtOrZbLa7qz/JKYaHJRP7od8UigR3fn4eIUT3Z/SSUnaZI/ZLgvWHP18EBmHQAfYg
      ivtHyS/f93ncBKGovML3fer1+mOFM1KAUqnUnV8wPz+PlHKPP1EsFkmn02xsbKDrOlNTU/sK
      /ovwKQYnwACPQFVVTNMkHo93WSQeByEEiURijzPdi35zZXR0lI2NDSzLot1udxUsSopFLBCw
      186PIk/P2vb42LUPaoEG2A/PwwLXy0LRn1XuZ5LoFfBu0zuP1gf1/r23NDsy2TKZzKdShIEJ
      NMC+eK7Kyt2TwHVdXNc9kG8IHp1T8Ej58z5r6M8rfNoQKAxMoAFeMCIl6Pcb9qNSeZocQb9D
      3Hvf4zrVnhYDBRjghaK3AX+/HfxxuYX+Hb3fd+g/ASJ/4dNgoAADvBD0CuqTypP3i+Hv53P0
      xvz3+76oo+3ThEUHCjDAC0Gv4CqKcmBEaD/B73d6Dyq73i+xtp/D/SwYOMEDvHA8S6b2oGjT
      fsLf+zO65tNmhAcKMMALRxiGNJvNfRNXj3N2n/T+fo60EALHcZ7IXnEQBibQAC8cEalWP3pj
      +P3Yr3S6v0yi17foNZtardZzR4QGCjDAC0ez2aTVaj3yfrR767rebarpFfiDojr9SbTeSFPU
      VlmtVp9LCQYm0AAvHKZp7nFOe4UVOoRcEfrNGinlgY05B+UEwrAzF7larZJOp58pQTY4AQZ4
      4dA0jXg8vue9/eL3B4VDez+P3ntS0iwMO3SO/czXT8JAAQZ44RCiM3ijd0Trk2qL+q87qCSi
      dwB4r0JE17uu+0xRoYECDPAbgRCiy0eqadojAh5d86Se4V6foPdE6L2/9712u/3ERp496xxU
      gw4Az1f9+bTPjTK2tVptj3A+qb2xv6Siv8wiekVEXdFpoChKdxbakzBQgAGA35wC9MJ13S4d
      Yy/2U4SDTKf9wqS9ZlFvFllVVRRFwTTNLsFvPwZRoAGA36zgR1BVlUQiQa1W22PaPClh1t9W
      uV++oL/9Eh6Ogmq1WmQyGTRNIwzD7uAQ3/cHJ8AAv11EUR7XdXEcB9u2u9ykj0P/idAf6uxv
      mul1jKPro9Niz3MHCjDAZ42odCKaXXYQnpRJ7jWXIgU5KJ8Q3TMwgQb4zCFEZ6aZlPKxGd2D
      HOX+3T46ZXpPif7PIwwUYIDPBYToMM5pmkaj0cC27QMpWZ62yjSafRD9fT/zaWACDfC5Q6+f
      0Gq1sG173wRZP/pPgse9340UvdilDzDAp0cUy5dSous6tm3jum6Xt7S/iab3vn5Hd79kWa9f
      MFCAAT63iITXsqzuUO8wDKlWq7iu+8ikmv12eSkllmXheV63TGKP0gxMoAG+aIjs+0ajQbvd
      PrArLOIuNU2ze02Uke5WqtZqtfBp2L8GGODzhkjoPc+j1Wp1nWYhBIZhYBjGvuUQrutSr9cJ
      goD/H3m5Sh9pZ5EXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Product Issues Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Response Efficiency' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
